extends guild-template.pug

append head
    link(rel="stylesheet", href="/css/welcomer.css")

append guild-name
    h1#menu-title #{guild.g.name}

append content
    #data(data-id=guild.g.id)
    #center
        #welcomer-content
            .opt
                p.ctitle Welcome message
                .center
                    if data.welcomer.welcome.enabled == true
                        input.ichk#welcome_enabled(type="checkbox" checked)
                    else
                        input.ichk#welcome_enabled(type="checkbox")
                    select.intext.stext#welcome_channel
                        each channel, index in channels
                            if data.welcomer.welcome.channel.id == channel.id
                                option(value=channel.id selected) #{channel.n}
                            else
                                option(value=channel.id) #{channel.n}
                input.intext#welcome_message.message(type="text" placeholder="Welcome message..." value=data.welcomer.welcome.message)
                input.intext.message(type="text" placeholder="" value="{guild.name}, {user.name}" disabled)
                #welcome_random_messages.messages
                    .center
                        if data.welcomer.welcome.random_message.enabled == true
                            input.ichk#random_message_enabled(type="checkbox" checked)
                        else
                            input.ichk#random_message_enabled(type="checkbox")
                        p.ctitle Random join message?
                    each message, index in data.welcomer.welcome.random_message.messages
                        input.intext.wmessage(type="text" onkeydown="if(event.key == 'Backspace' && this.value.length == 0) this.destroy(); if(event.key == 'Enter'){createChild('Welcome', 'welcome_random_messages', 'wmessage')}" value=message placeholder='Welcome message...')
                    input.intext.wmessage(type="text" onkeydown="if(event.keyCode == 13){createChild('Welcome', 'welcome_random_messages', 'wmessage')}" placeholder='Welcome message...')
            .opt
                p.ctitle Leave message
                .center
                    if data.welcomer.goodbye.enabled == true
                        input.ichk#goodbye_enabled(type="checkbox" checked)
                    else
                        input.ichk#goodbye_enabled(type="checkbox")
                    select.stext#goodbye_channel
                        each channel, index in channels
                            if data.welcomer.goodbye.channel.id == channel.id
                                option(value=channel.id selected) #{channel.n}
                            else
                                option(value=channel.id) #{channel.n}
                input.intext#goodbye_message.message(type="text" placeholder="Goodbye message..." value=data.welcomer.goodbye.message)
                input.intext.message(type="text" placeholder="" value="{guild.name}, {user.name}" disabled)
                #goodbye_random_messages.messages
                    .center
                        if data.welcomer.goodbye.random_message.enabled == true
                            input.ichk#random_leave_message_enabled(type="checkbox" checked)
                        else
                            input.ichk#random_leave_message_enabled(type="checkbox")
                        p.ctitle Random leave message?
                    each message, index in data.welcomer.goodbye.random_message.messages
                        input.intext.lmessage(type="text" onkeydown="if(event.key == 'Backspace' && this.value.length == 0) this.destroy(); if(event.key == 'Enter'){createChild('Goodbye', 'goodbye_random_messages', 'lmessage')}" value=message placeholder='Goodbye message...')
                    input.intext.lmessage(type="text" onkeydown="if(event.key == 'Enter'){createChild('Goodbye', 'goodbye_random_messages', 'lmessage')}" placeholder='Goodbye message...')

append scripts
    script(src="/js/welcomer.js")